<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.ShopMapper">
	<resultMap id="BaseResultMap" type="com.woniu.domain.Shop">
		<id column="sid" jdbcType="INTEGER" property="sid" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="sname" jdbcType="VARCHAR" property="sname" />
		<result column="sinfo" jdbcType="VARCHAR" property="sinfo" />
		<result column="stel" jdbcType="VARCHAR" property="stel" />
		<result column="saddress" jdbcType="VARCHAR"
			property="saddress" />
		<result column="opentime" jdbcType="TIMESTAMP"
			property="opentime" />
		<result column="closetime" jdbcType="TIMESTAMP"
			property="closetime" />
		<result column="sstatus" jdbcType="INTEGER" property="sstatus" />
		<result column="coin" jdbcType="INTEGER" property="coin" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		sid, uid, sname, sinfo, stel, saddress, opentime,
		closetime, sstatus, coin
	</sql>
	<select id="selectByExample"
		parameterType="com.woniu.domain.ShopExample" resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from shop
		where sid = #{sid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from shop
		where sid = #{sid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.woniu.domain.ShopExample">
		delete from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.woniu.domain.Shop">
		insert into shop (sid, uid,
		sname,
		sinfo, stel, saddress,
		opentime, closetime, sstatus,
		coin)
		values
		(#{sid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
		#{sname,jdbcType=VARCHAR},
		#{sinfo,jdbcType=VARCHAR},
		#{stel,jdbcType=VARCHAR}, #{saddress,jdbcType=VARCHAR},
		#{opentime,jdbcType=TIMESTAMP}, #{closetime,jdbcType=TIMESTAMP},
		#{sstatus,jdbcType=INTEGER},
		#{coin,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.woniu.domain.Shop">
		insert into shop
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sid != null">
				sid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="sname != null">
				sname,
			</if>
			<if test="sinfo != null">
				sinfo,
			</if>
			<if test="stel != null">
				stel,
			</if>
			<if test="saddress != null">
				saddress,
			</if>
			<if test="opentime != null">
				opentime,
			</if>
			<if test="closetime != null">
				closetime,
			</if>
			<if test="sstatus != null">
				sstatus,
			</if>
			<if test="coin != null">
				coin,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="sname != null">
				#{sname,jdbcType=VARCHAR},
			</if>
			<if test="sinfo != null">
				#{sinfo,jdbcType=VARCHAR},
			</if>
			<if test="stel != null">
				#{stel,jdbcType=VARCHAR},
			</if>
			<if test="saddress != null">
				#{saddress,jdbcType=VARCHAR},
			</if>
			<if test="opentime != null">
				#{opentime,jdbcType=TIMESTAMP},
			</if>
			<if test="closetime != null">
				#{closetime,jdbcType=TIMESTAMP},
			</if>
			<if test="sstatus != null">
				#{sstatus,jdbcType=INTEGER},
			</if>
			<if test="coin != null">
				#{coin,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.woniu.domain.ShopExample"
		resultType="java.lang.Long">
		select count(*) from shop
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update shop
		<set>
			<if test="record.sid != null">
				sid = #{record.sid,jdbcType=INTEGER},
			</if>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=INTEGER},
			</if>
			<if test="record.sname != null">
				sname = #{record.sname,jdbcType=VARCHAR},
			</if>
			<if test="record.sinfo != null">
				sinfo = #{record.sinfo,jdbcType=VARCHAR},
			</if>
			<if test="record.stel != null">
				stel = #{record.stel,jdbcType=VARCHAR},
			</if>
			<if test="record.saddress != null">
				saddress = #{record.saddress,jdbcType=VARCHAR},
			</if>
			<if test="record.opentime != null">
				opentime = #{record.opentime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.closetime != null">
				closetime = #{record.closetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.sstatus != null">
				sstatus = #{record.sstatus,jdbcType=INTEGER},
			</if>
			<if test="record.coin != null">
				coin = #{record.coin,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update shop
		set sid = #{record.sid,jdbcType=INTEGER},
		uid =
		#{record.uid,jdbcType=INTEGER},
		sname =
		#{record.sname,jdbcType=VARCHAR},
		sinfo =
		#{record.sinfo,jdbcType=VARCHAR},
		stel =
		#{record.stel,jdbcType=VARCHAR},
		saddress =
		#{record.saddress,jdbcType=VARCHAR},
		opentime =
		#{record.opentime,jdbcType=TIMESTAMP},
		closetime =
		#{record.closetime,jdbcType=TIMESTAMP},
		sstatus =
		#{record.sstatus,jdbcType=INTEGER},
		coin =
		#{record.coin,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.woniu.domain.Shop">
		update shop
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="sname != null">
				sname = #{sname,jdbcType=VARCHAR},
			</if>
			<if test="sinfo != null">
				sinfo = #{sinfo,jdbcType=VARCHAR},
			</if>
			<if test="stel != null">
				stel = #{stel,jdbcType=VARCHAR},
			</if>
			<if test="saddress != null">
				saddress = #{saddress,jdbcType=VARCHAR},
			</if>
			<if test="opentime != null">
				opentime = #{opentime,jdbcType=TIMESTAMP},
			</if>
			<if test="closetime != null">
				closetime = #{closetime,jdbcType=TIMESTAMP},
			</if>
			<if test="sstatus != null">
				sstatus = #{sstatus,jdbcType=INTEGER},
			</if>
			<if test="coin != null">
				coin = #{coin,jdbcType=INTEGER},
			</if>
		</set>
		where sid = #{sid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.woniu.domain.Shop">
		update shop
		set uid = #{uid,jdbcType=INTEGER},
		sname =
		#{sname,jdbcType=VARCHAR},
		sinfo = #{sinfo,jdbcType=VARCHAR},
		stel =
		#{stel,jdbcType=VARCHAR},
		saddress = #{saddress,jdbcType=VARCHAR},
		opentime = #{opentime,jdbcType=TIMESTAMP},
		closetime =
		#{closetime,jdbcType=TIMESTAMP},
		sstatus = #{sstatus,jdbcType=INTEGER},
		coin = #{coin,jdbcType=INTEGER}
		where sid = #{sid,jdbcType=INTEGER}
	</update>



	<select id="findShopBySid" resultMap="rm">
		SELECT * FROM shop WHERE
		sid=#{sid}
	</select>
	<resultMap type="com.woniu.domain.Shop" id="rm">
		<id property="sid" column="sid" />
		<result property="sname" column="sname" />
		<result property="sinfo" column="sinfo" />
		<result property="stel" column="stel" />
		<result property="saddress" column="saddress" />
		<result property="opentime" column="opentime" />
		<result property="closetime" column="closetime" />
		<result property="sstatus" column="sstatus" />
		<result property="coin" column="coin" />
	</resultMap>


	<select id="findAll" resultMap="rm2">
		SELECT *FROM shop s JOIN users u
		ON s.`uid`=u.`uid`
	</select>
	<resultMap type="com.woniu.domain.Shop" id="rm2">
		<id property="sid" column="sid" />
		<result property="sname" column="sname" />
		<result property="sinfo" column="sinfo" />
		<result property="stel" column="stel" />
		<result property="saddress" column="saddress" />
		<result property="opentime" column="opentime" />
		<result property="closetime" column="closetime" />
		<result property="sstatus" column="sstatus" />
		<result property="coin" column="coin" />
		<collection property="users" column="uid"
			select="com.woniu.dao.UsersMapper.findUserByUid">
		</collection>
	</resultMap>
</mapper>